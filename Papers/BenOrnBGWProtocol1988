The secure multiparty computation problem, which n parties want to jointly compute some functionality without revealing their inputs, arises popularity in distributed system field. Many approaches have been proposed. One of the most fundamental results is the BGW protocol, presented by Ben-Orn et. al. Let n be the number of parties and t the number of corrupted parties. The results of BGW protocol can be summarized as follows:
- In the semi-honest adversary security setting, BGW provides perfect security,  informally meaning that there is a zero probability of cheating by the adversary,  when t < n / 2 parties are corrupted.
- In the malicious adversary security setting, BGW provides perfect security when 
t < n / 3 parties are corruptes.

The computation of  BGW protocol can be summarized as follows:
-Firstly n parties using Shamir’s secret sharing to share their inputs.
-Then each party emulate the computation of shares of the circuit gate’s output from the shares of the circuit gate’s inputs. 
-Finally, parties reconstruct the secrets from the outputs of gates.

In more detail, in the first step, n parties using Shamir’s secret sharing. In the semi-honest adversary security setting,  a threshold t < n/2 is used, while in the malicious adversary security setting, a threshold t < n/3 is used. 
In the second steps, parties compute its secure share independentely. Specifically, the output shares of addition gate can be computed locally by Alpha(i) + Beta(i) = Gamma(i), where i is belong to (0,1), Alpha(i) and Beta(i) for the shares of input wires of addition gate, Gamma(i) for the share of output wires of addition gate. The observation is guaranteed by the definition of the polynomial function of Shamir’s secret sharing Gamma(x) is the sum of shares Alpha(x), Beta(x), which has same degree, and  Alpha(0) + Beta(0) = Gamma(0).


